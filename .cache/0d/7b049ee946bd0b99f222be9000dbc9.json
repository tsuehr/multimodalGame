{"id":"../node_modules/pngjs-image/lib/memoryStream.js","dependencies":[{"name":"C:\\Users\\tomsu\\Desktop\\thedispatchergame\\package.json","includedInParent":true,"mtime":1630049094769},{"name":"C:\\Users\\tomsu\\Desktop\\thedispatchergame\\node_modules\\pngjs-image\\package.json","includedInParent":true,"mtime":1630049094240},{"name":"stream","loc":{"line":1,"column":21},"parent":"C:\\Users\\tomsu\\Desktop\\thedispatchergame\\node_modules\\pngjs-image\\lib\\memoryStream.js","resolved":"C:\\Users\\tomsu\\Desktop\\thedispatchergame\\node_modules\\stream-browserify\\index.js"},{"name":"util","loc":{"line":2,"column":19},"parent":"C:\\Users\\tomsu\\Desktop\\thedispatchergame\\node_modules\\pngjs-image\\lib\\memoryStream.js","resolved":"C:\\Users\\tomsu\\Desktop\\thedispatchergame\\node_modules\\node-libs-browser\\node_modules\\util\\util.js"},{"name":"buffer","parent":"C:\\Users\\tomsu\\Desktop\\thedispatchergame\\node_modules\\pngjs-image\\lib\\memoryStream.js","resolved":"C:\\Users\\tomsu\\Desktop\\thedispatchergame\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nvar stream = require('stream');\nvar util = require('util');\n\nvar MemoryStream = function (options) {\n\toptions = options || {};\n\n\tstream.Writable.call(this, options);\n\n\tthis.buffer = new Buffer((options.size || 16 * 1024) * 1);\n\tthis.offset = 0;\n};\nutil.inherits(MemoryStream, stream.Writable);\n\nMemoryStream.prototype._write = function (chunk, encoding, cb) {\n\n\tcb = cb || function () {};\n\n\tvar localBuffer = new Buffer(chunk, encoding);\n\n\t// Need to resize memory?\n\tif (this.buffer.length - this.offset < localBuffer.length) {\n\t\tvar buffer = new Buffer(this.buffer.length + localBuffer.length);\n\t\tthis.buffer.copy(buffer, 0, 0, this.buffer.length);\n\t\tthis.buffer = buffer;\n\t}\n\n\tlocalBuffer.copy(this.buffer, this.offset, 0, localBuffer.length);\n\tthis.offset += localBuffer.length;\n\n\tcb(null, localBuffer);\n};\n\nMemoryStream.prototype.getBuffer = function () {\n\tvar localBuffer = new Buffer(this.offset);\n\tthis.buffer.copy(localBuffer, 0, 0, this.offset);\n\treturn localBuffer;\n};\n\nmodule.exports = MemoryStream;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/pngjs-image/lib/memoryStream.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}}],"sources":{"../node_modules/pngjs-image/lib/memoryStream.js":"var stream = require('stream');\nvar util = require('util');\n\nvar MemoryStream = function (options) {\n\toptions = options || {};\n\n\tstream.Writable.call(this, options);\n\n\tthis.buffer = new Buffer((options.size || 16 * 1024) * 1);\n\tthis.offset = 0;\n};\nutil.inherits(MemoryStream, stream.Writable);\n\nMemoryStream.prototype._write = function (chunk, encoding, cb) {\n\n\tcb = cb || function () {};\n\n\tvar localBuffer = new Buffer(chunk, encoding);\n\n\t// Need to resize memory?\n\tif (this.buffer.length - this.offset < localBuffer.length) {\n\t\tvar buffer = new Buffer(this.buffer.length + localBuffer.length);\n\t\tthis.buffer.copy(buffer, 0, 0, this.buffer.length);\n\t\tthis.buffer = buffer;\n\t}\n\n\tlocalBuffer.copy(this.buffer, this.offset, 0, localBuffer.length);\n\tthis.offset += localBuffer.length;\n\n\tcb(null, localBuffer);\n};\n\nMemoryStream.prototype.getBuffer = function () {\n\tvar localBuffer = new Buffer(this.offset);\n\tthis.buffer.copy(localBuffer, 0, 0, this.offset);\n\treturn localBuffer;\n};\n\nmodule.exports = MemoryStream;\n"},"lineCount":41}},"error":null,"hash":"7b18c3157717832d96341b3fd9923fe5","cacheData":{"env":{}}}
{"id":"Taxi.js","dependencies":[{"name":"C:\\Users\\tomsu\\Desktop\\thedispatchergame\\package.json","includedInParent":true,"mtime":1630049094769},{"name":"phaser","loc":{"line":1,"column":19},"parent":"C:\\Users\\tomsu\\Desktop\\thedispatchergame\\src\\Taxi.js","resolved":"C:\\Users\\tomsu\\Desktop\\thedispatchergame\\node_modules\\phaser\\dist\\phaser.js"}],"generated":{"js":"\"use strict\";\n\nvar _phaser = _interopRequireDefault(require(\"phaser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\r\n * Taxi object which stores an identifier, position and maybe more to process matches etc.\r\n *  Comment: I tried to extend the Sprite object in order to add new fields like an id to it\r\n**/\nvar Taxi = /*#__PURE__*/function (_Phaser$GameObjects$S) {\n  _inherits(Taxi, _Phaser$GameObjects$S);\n\n  var _super = _createSuper(Taxi);\n\n  function Taxi(scene, x, y, identifier) {\n    var _this;\n\n    _classCallCheck(this, Taxi);\n\n    _this = _super.call(this, scene, x, y, 'cab');\n    _this.identifier = identifier;\n    _this.waited = 0;\n    return _this;\n  }\n\n  return Taxi;\n}(_phaser.default.GameObjects.Sprite);"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"Taxi.js","original":{"line":1,"column":0}},{"generated":{"line":25,"column":0},"source":"Taxi.js","original":{"line":3,"column":0}},{"generated":{"line":26,"column":0},"source":"Taxi.js","original":{"line":4,"column":0}},{"generated":{"line":27,"column":0},"source":"Taxi.js","original":{"line":5,"column":0}},{"generated":{"line":28,"column":0},"source":"Taxi.js","original":{"line":6,"column":0}},{"name":"Taxi","generated":{"line":29,"column":4},"source":"Taxi.js","original":{"line":7,"column":6}},{"generated":{"line":34,"column":0},"source":"Taxi.js","original":{"line":8,"column":4}},{"name":"scene","generated":{"line":34,"column":16},"source":"Taxi.js","original":{"line":8,"column":16}},{"generated":{"line":34,"column":21},"source":"Taxi.js","original":{"line":8,"column":4}},{"name":"x","generated":{"line":34,"column":23},"source":"Taxi.js","original":{"line":8,"column":23}},{"generated":{"line":34,"column":24},"source":"Taxi.js","original":{"line":8,"column":4}},{"name":"y","generated":{"line":34,"column":26},"source":"Taxi.js","original":{"line":8,"column":26}},{"generated":{"line":34,"column":27},"source":"Taxi.js","original":{"line":8,"column":4}},{"name":"identifier","generated":{"line":34,"column":29},"source":"Taxi.js","original":{"line":8,"column":29}},{"generated":{"line":34,"column":39},"source":"Taxi.js","original":{"line":8,"column":4}},{"generated":{"line":34,"column":41},"source":"Taxi.js","original":{"line":8,"column":41}},{"generated":{"line":35,"column":0},"source":"Taxi.js","original":{"line":8,"column":41}},{"generated":{"line":37,"column":0},"source":"Taxi.js","original":{"line":8,"column":41}},{"generated":{"line":39,"column":0},"source":"Taxi.js","original":{"line":9,"column":8}},{"name":"scene","generated":{"line":39,"column":30},"source":"Taxi.js","original":{"line":9,"column":14}},{"generated":{"line":39,"column":35},"source":"Taxi.js","original":{"line":9,"column":8}},{"name":"x","generated":{"line":39,"column":37},"source":"Taxi.js","original":{"line":9,"column":21}},{"generated":{"line":39,"column":38},"source":"Taxi.js","original":{"line":9,"column":8}},{"name":"y","generated":{"line":39,"column":40},"source":"Taxi.js","original":{"line":9,"column":24}},{"generated":{"line":39,"column":41},"source":"Taxi.js","original":{"line":9,"column":8}},{"generated":{"line":39,"column":43},"source":"Taxi.js","original":{"line":9,"column":27}},{"generated":{"line":39,"column":48},"source":"Taxi.js","original":{"line":9,"column":8}},{"generated":{"line":40,"column":0},"source":"Taxi.js","original":{"line":10,"column":8}},{"name":"identifier","generated":{"line":40,"column":10},"source":"Taxi.js","original":{"line":10,"column":13}},{"generated":{"line":40,"column":20},"source":"Taxi.js","original":{"line":10,"column":8}},{"name":"identifier","generated":{"line":40,"column":23},"source":"Taxi.js","original":{"line":10,"column":26}},{"generated":{"line":40,"column":33},"source":"Taxi.js","original":{"line":10,"column":8}},{"generated":{"line":41,"column":0},"source":"Taxi.js","original":{"line":11,"column":8}},{"name":"waited","generated":{"line":41,"column":10},"source":"Taxi.js","original":{"line":11,"column":13}},{"generated":{"line":41,"column":16},"source":"Taxi.js","original":{"line":11,"column":8}},{"generated":{"line":41,"column":19},"source":"Taxi.js","original":{"line":11,"column":22}},{"generated":{"line":41,"column":20},"source":"Taxi.js","original":{"line":11,"column":8}},{"generated":{"line":42,"column":0},"source":"Taxi.js","original":{"line":8,"column":41}},{"generated":{"line":43,"column":0},"source":"Taxi.js","original":{"line":12,"column":5}},{"name":"Phaser","generated":{"line":46,"column":2},"source":"Taxi.js","original":{"line":7,"column":19}},{"name":"GameObjects","generated":{"line":46,"column":18},"source":"Taxi.js","original":{"line":7,"column":26}},{"generated":{"line":46,"column":29},"source":"Taxi.js","original":{"line":7,"column":19}},{"name":"Sprite","generated":{"line":46,"column":30},"source":"Taxi.js","original":{"line":7,"column":38}}],"sources":{"Taxi.js":"import Phaser from 'phaser'\r\n\r\n/**\r\n * Taxi object which stores an identifier, position and maybe more to process matches etc.\r\n *  Comment: I tried to extend the Sprite object in order to add new fields like an id to it\r\n**/\r\nclass Taxi extends Phaser.GameObjects.Sprite {\r\n    constructor(scene, x, y, identifier) {\r\n        super(scene, x, y, 'cab');\r\n        this.identifier = identifier;\r\n        this.waited = 0\r\n    }\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"c0a1c734f3f83fe48315622846aa1314","cacheData":{"env":{}}}
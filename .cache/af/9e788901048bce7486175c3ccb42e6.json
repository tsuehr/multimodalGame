{"id":"../node_modules/pngjs-image/lib/png/decoder.js","dependencies":[{"name":"C:\\Users\\tomsu\\Desktop\\thedispatchergame\\package.json","includedInParent":true,"mtime":1630049094769},{"name":"C:\\Users\\tomsu\\Desktop\\thedispatchergame\\node_modules\\pngjs-image\\package.json","includedInParent":true,"mtime":1630049094240},{"name":"./chunk","loc":{"line":4,"column":20},"parent":"C:\\Users\\tomsu\\Desktop\\thedispatchergame\\node_modules\\pngjs-image\\lib\\png\\decoder.js","resolved":"C:\\Users\\tomsu\\Desktop\\thedispatchergame\\node_modules\\pngjs-image\\lib\\png\\chunk.js"},{"name":"./processor/crc","loc":{"line":6,"column":18},"parent":"C:\\Users\\tomsu\\Desktop\\thedispatchergame\\node_modules\\pngjs-image\\lib\\png\\decoder.js","resolved":"C:\\Users\\tomsu\\Desktop\\thedispatchergame\\node_modules\\pngjs-image\\lib\\png\\processor\\crc.js"},{"name":"./utils/bufferedStream","loc":{"line":8,"column":29},"parent":"C:\\Users\\tomsu\\Desktop\\thedispatchergame\\node_modules\\pngjs-image\\lib\\png\\decoder.js","resolved":"C:\\Users\\tomsu\\Desktop\\thedispatchergame\\node_modules\\pngjs-image\\lib\\png\\utils\\bufferedStream.js"},{"name":"./utils/utils","loc":{"line":9,"column":20},"parent":"C:\\Users\\tomsu\\Desktop\\thedispatchergame\\node_modules\\pngjs-image\\lib\\png\\decoder.js","resolved":"C:\\Users\\tomsu\\Desktop\\thedispatchergame\\node_modules\\pngjs-image\\lib\\png\\utils\\utils.js"},{"name":"./utils/constants","loc":{"line":10,"column":24},"parent":"C:\\Users\\tomsu\\Desktop\\thedispatchergame\\node_modules\\pngjs-image\\lib\\png\\decoder.js","resolved":"C:\\Users\\tomsu\\Desktop\\thedispatchergame\\node_modules\\pngjs-image\\lib\\png\\utils\\constants.js"},{"name":"path","loc":{"line":12,"column":19},"parent":"C:\\Users\\tomsu\\Desktop\\thedispatchergame\\node_modules\\pngjs-image\\lib\\png\\decoder.js","resolved":"C:\\Users\\tomsu\\Desktop\\thedispatchergame\\node_modules\\path-browserify\\index.js"}],"generated":{"js":"var __dirname = \"C:\\\\Users\\\\tomsu\\\\Desktop\\\\thedispatchergame\\\\node_modules\\\\pngjs-image\\\\lib\\\\png\";\n// Copyright 2015 Yahoo! Inc.\n// Copyrights licensed under the Mit License. See the accompanying LICENSE file for terms.\n\nvar Chunk = require('./chunk');\n\nvar CRC = require('./processor/crc');\n\nvar BufferedStream = require('./utils/bufferedStream');\nvar utils = require('./utils/utils');\nvar constants = require('./utils/constants');\n\nvar path = require('path');\n\n\n/**\n * @class Decoder\n * @module PNG\n * @submodule PNGCore\n * @extends chunkUtils\n * @constructor\n */\nvar Decoder = function () {\n\tthis._chunks = {};\n\tthis._chunkData = {};\n\n\tutils.loadModule(path.join(__dirname, 'utils', 'chunkUtils.js'), this);\n};\n\n\n/**\n * Gets the data supplied by each chunk\n *\n * @method getChunkData\n * @return {object}\n */\nDecoder.prototype.getChunkData = function () {\n\treturn this._chunkData;\n};\n\n\n/**\n * Decodes the supplied data\n *\n * @method decode\n * @param {Buffer} buffer Image data\n * @param {object} [options] Decoding options\n * @param {boolean} [options.strict=false] Strict decoding\n */\nDecoder.prototype.decode = function (buffer, options) {\n\n\toptions = options || {};\n\n\tvar i, len,\n\t\tchunk, image = null,\n\t\tsignature = constants.signature,\n\t\tstreamSignature,\n\t\tstrict = !!options.strict,\n\t\tstream = new BufferedStream(buffer, false);\n\n\tthis._chunks = {};\n\tthis._chunkData = {};\n\n\t// Check signature\n\tstreamSignature = stream.readBuffer(signature.length);\n\tfor (i = 0, len = signature.length; i < len; i++) {\n\t\tif (streamSignature[i] !== signature[i]) {\n\t\t\t// Always throw error (even with strict=false) - need to be sure it is a PNG\n\t\t\tthrow new Error('Invalid signature for a PNG image.');\n\t\t}\n\t}\n\n\t// Load all chunks until end is reached\n\t// Phase 1 - Forward\n\tdo {\n\t\tchunk = this._parseChunk(stream, strict, options);\n\t} while (chunk.getType() !== 'IEND');\n\n\t// Run through all chunks before scaling\n\t// Phase 2 - Forward\n\tthis.applyWithSortedChunks(function (chunk) {\n\n\t\ttry {\n\t\t\timage = chunk.decode(image, strict, options);\n\n\t\t} catch (err) {\n\n\t\t\t// Ignore non-critical errors - not required for image reading\n\t\t\t// If strict is requested, then re-throw\n\t\t\tif (strict || chunk.isCritical()) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\t}, true);\n\n\t// Run through all chunks after scaling\n\t// Phase 3 - Forward\n\tthis.applyWithSortedChunks(function (chunk) {\n\n\t\ttry {\n\t\t\timage = chunk.postDecode(image, strict, options);\n\n\t\t} catch (err) {\n\n\t\t\t// Ignore non-critical errors - not required for image reading\n\t\t\t// If strict is requested, then re-throw\n\t\t\tif (strict || chunk.isCritical()) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\t}, true);\n\n\t// Run through all chunks after image is complete\n\t// Phase 4 - Forward\n\tthis.applyWithSortedChunks(function (chunk) {\n\n\t\ttry {\n\t\t\timage = chunk.finalizeDecode(image, strict, options);\n\n\t\t} catch (err) {\n\n\t\t\t// Ignore non-critical errors - not required for image reading\n\t\t\t// If strict is requested, then re-throw\n\t\t\tif (strict || chunk.isCritical()) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\t}, true);\n\n\t// Run through all chunks-types (not chunks) to gather chunk-data\n\t// Phase 5 - Forward\n\tthis.applyWithSortedChunks(function (chunk) {\n\t\tChunk.decodeTypeData(chunk.getType(), this._chunkData, this._chunks, strict, options);\n\t}.bind(this), false);\n\n\treturn image;\n};\n\n/**\n * Reads the next chunk in the stream\n *\n * @method _parseChunk\n * @param {BufferedStream} stream Data stream\n * @param {boolean} strict Should decoding be strict?\n * @param {object} options Decoding options\n * @return {Chunk} Chunk read\n * @private\n */\nDecoder.prototype._parseChunk = function (stream, strict, options) {\n\n\tvar chunkLength,\n\t\tchunkType,\n\t\tchunkCrc,\n\t\tcalculatedCrc,\n\t\tcrc,\n\t\tchunk,\n\t\tchunkOffset;\n\n\t// Read chunk-length\n\tchunkLength = stream.readUInt32BE();\n\tif (chunkLength + 8 > stream.length) {\n\t\tthrow new Error('Chunk length is greater than the input data.');\n\t}\n\tchunkOffset = stream.readOffset + chunkLength + 8; // 8 for type and CRC value\n\n\t// Load chunk for crc calculation\n\tcrc = new CRC();\n\tcrc.write(stream.toBuffer(true), stream.readOffset, chunkLength + 4); // Including chunk-type\n\n\t// Create chunk that is suggested by the data\n\tchunkType = stream.readString(4, 'ascii');\n\tchunk = new Chunk(chunkType, this._chunks);\n\n\ttry {\n\n\t\t// Parsing of chunk data\n\t\tchunk.parse(stream, chunkLength, strict, options);\n\n\t\t// Load crc and compare with calculated one\n\t\tchunkCrc = stream.readInt32BE();\n\t\tcalculatedCrc = crc.getValue();\n\t\tif (strict && (chunkCrc !== calculatedCrc)) {\n\t\t\t//throw new Error('CRC error.');\n\t\t\t//TODO: Something is not working; overflow?\n\t\t}\n\n\t\t// Add to parsed chunks\n\t\tthis.addChunk(chunk);\n\n\t} catch (err) {\n\n\t\t// Ignore non-critical errors - not required for image reading\n\t\t// If strict is requested, then re-throw\n\t\tif (strict || chunk.isCritical()) {\n\t\t\tthrow err;\n\t\t}\n\t} finally {\n\t\t// Make sure the chunk did not read over bounds - resetting of reader offset\n\t\tstream.readOffset = chunkOffset;\n\t}\n\n\treturn chunk;\n};\n\nmodule.exports = Decoder;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/pngjs-image/lib/png/decoder.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}}],"sources":{"../node_modules/pngjs-image/lib/png/decoder.js":"// Copyright 2015 Yahoo! Inc.\n// Copyrights licensed under the Mit License. See the accompanying LICENSE file for terms.\n\nvar Chunk = require('./chunk');\n\nvar CRC = require('./processor/crc');\n\nvar BufferedStream = require('./utils/bufferedStream');\nvar utils = require('./utils/utils');\nvar constants = require('./utils/constants');\n\nvar path = require('path');\n\n\n/**\n * @class Decoder\n * @module PNG\n * @submodule PNGCore\n * @extends chunkUtils\n * @constructor\n */\nvar Decoder = function () {\n\tthis._chunks = {};\n\tthis._chunkData = {};\n\n\tutils.loadModule(path.join(__dirname, 'utils', 'chunkUtils.js'), this);\n};\n\n\n/**\n * Gets the data supplied by each chunk\n *\n * @method getChunkData\n * @return {object}\n */\nDecoder.prototype.getChunkData = function () {\n\treturn this._chunkData;\n};\n\n\n/**\n * Decodes the supplied data\n *\n * @method decode\n * @param {Buffer} buffer Image data\n * @param {object} [options] Decoding options\n * @param {boolean} [options.strict=false] Strict decoding\n */\nDecoder.prototype.decode = function (buffer, options) {\n\n\toptions = options || {};\n\n\tvar i, len,\n\t\tchunk, image = null,\n\t\tsignature = constants.signature,\n\t\tstreamSignature,\n\t\tstrict = !!options.strict,\n\t\tstream = new BufferedStream(buffer, false);\n\n\tthis._chunks = {};\n\tthis._chunkData = {};\n\n\t// Check signature\n\tstreamSignature = stream.readBuffer(signature.length);\n\tfor (i = 0, len = signature.length; i < len; i++) {\n\t\tif (streamSignature[i] !== signature[i]) {\n\t\t\t// Always throw error (even with strict=false) - need to be sure it is a PNG\n\t\t\tthrow new Error('Invalid signature for a PNG image.');\n\t\t}\n\t}\n\n\t// Load all chunks until end is reached\n\t// Phase 1 - Forward\n\tdo {\n\t\tchunk = this._parseChunk(stream, strict, options);\n\t} while (chunk.getType() !== 'IEND');\n\n\t// Run through all chunks before scaling\n\t// Phase 2 - Forward\n\tthis.applyWithSortedChunks(function (chunk) {\n\n\t\ttry {\n\t\t\timage = chunk.decode(image, strict, options);\n\n\t\t} catch (err) {\n\n\t\t\t// Ignore non-critical errors - not required for image reading\n\t\t\t// If strict is requested, then re-throw\n\t\t\tif (strict || chunk.isCritical()) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\t}, true);\n\n\t// Run through all chunks after scaling\n\t// Phase 3 - Forward\n\tthis.applyWithSortedChunks(function (chunk) {\n\n\t\ttry {\n\t\t\timage = chunk.postDecode(image, strict, options);\n\n\t\t} catch (err) {\n\n\t\t\t// Ignore non-critical errors - not required for image reading\n\t\t\t// If strict is requested, then re-throw\n\t\t\tif (strict || chunk.isCritical()) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\t}, true);\n\n\t// Run through all chunks after image is complete\n\t// Phase 4 - Forward\n\tthis.applyWithSortedChunks(function (chunk) {\n\n\t\ttry {\n\t\t\timage = chunk.finalizeDecode(image, strict, options);\n\n\t\t} catch (err) {\n\n\t\t\t// Ignore non-critical errors - not required for image reading\n\t\t\t// If strict is requested, then re-throw\n\t\t\tif (strict || chunk.isCritical()) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\t}, true);\n\n\t// Run through all chunks-types (not chunks) to gather chunk-data\n\t// Phase 5 - Forward\n\tthis.applyWithSortedChunks(function (chunk) {\n\t\tChunk.decodeTypeData(chunk.getType(), this._chunkData, this._chunks, strict, options);\n\t}.bind(this), false);\n\n\treturn image;\n};\n\n/**\n * Reads the next chunk in the stream\n *\n * @method _parseChunk\n * @param {BufferedStream} stream Data stream\n * @param {boolean} strict Should decoding be strict?\n * @param {object} options Decoding options\n * @return {Chunk} Chunk read\n * @private\n */\nDecoder.prototype._parseChunk = function (stream, strict, options) {\n\n\tvar chunkLength,\n\t\tchunkType,\n\t\tchunkCrc,\n\t\tcalculatedCrc,\n\t\tcrc,\n\t\tchunk,\n\t\tchunkOffset;\n\n\t// Read chunk-length\n\tchunkLength = stream.readUInt32BE();\n\tif (chunkLength + 8 > stream.length) {\n\t\tthrow new Error('Chunk length is greater than the input data.');\n\t}\n\tchunkOffset = stream.readOffset + chunkLength + 8; // 8 for type and CRC value\n\n\t// Load chunk for crc calculation\n\tcrc = new CRC();\n\tcrc.write(stream.toBuffer(true), stream.readOffset, chunkLength + 4); // Including chunk-type\n\n\t// Create chunk that is suggested by the data\n\tchunkType = stream.readString(4, 'ascii');\n\tchunk = new Chunk(chunkType, this._chunks);\n\n\ttry {\n\n\t\t// Parsing of chunk data\n\t\tchunk.parse(stream, chunkLength, strict, options);\n\n\t\t// Load crc and compare with calculated one\n\t\tchunkCrc = stream.readInt32BE();\n\t\tcalculatedCrc = crc.getValue();\n\t\tif (strict && (chunkCrc !== calculatedCrc)) {\n\t\t\t//throw new Error('CRC error.');\n\t\t\t//TODO: Something is not working; overflow?\n\t\t}\n\n\t\t// Add to parsed chunks\n\t\tthis.addChunk(chunk);\n\n\t} catch (err) {\n\n\t\t// Ignore non-critical errors - not required for image reading\n\t\t// If strict is requested, then re-throw\n\t\tif (strict || chunk.isCritical()) {\n\t\t\tthrow err;\n\t\t}\n\t} finally {\n\t\t// Make sure the chunk did not read over bounds - resetting of reader offset\n\t\tstream.readOffset = chunkOffset;\n\t}\n\n\treturn chunk;\n};\n\nmodule.exports = Decoder;\n"},"lineCount":206}},"error":null,"hash":"4fe48c1d47b95508aff3b99a89ebd8e1","cacheData":{"env":{}}}